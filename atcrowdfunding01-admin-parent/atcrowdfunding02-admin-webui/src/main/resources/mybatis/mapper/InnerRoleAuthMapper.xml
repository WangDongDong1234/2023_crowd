<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.crowd.mapper.InnerRoleAuthMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.crowd.entity.InnerRoleAuthEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="role_id" />
    <result column="auth_id" jdbcType="INTEGER" property="auth_id" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, auth_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inner_role_auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inner_role_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atguigu.crowd.entity.InnerRoleAuthEntity">
    insert into inner_role_auth (id, role_id, auth_id
      )
    values (#{id,jdbcType=INTEGER}, #{role_id,jdbcType=INTEGER}, #{auth_id,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.crowd.entity.InnerRoleAuthEntity">
    insert into inner_role_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role_id != null">
        role_id,
      </if>
      <if test="auth_id != null">
        auth_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role_id != null">
        #{role_id,jdbcType=INTEGER},
      </if>
      <if test="auth_id != null">
        #{auth_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.crowd.entity.InnerRoleAuthEntity">
    update inner_role_auth
    <set>
      <if test="role_id != null">
        role_id = #{role_id,jdbcType=INTEGER},
      </if>
      <if test="auth_id != null">
        auth_id = #{auth_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.crowd.entity.InnerRoleAuthEntity">
    update inner_role_auth
    set role_id = #{role_id,jdbcType=INTEGER},
      auth_id = #{auth_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAssignedAuthIdByRoleId" resultType="int">
    select auth_id from inner_role_auth where role_id=#{roleId}
  </select>

  <delete id="deleteOldRelationship">
    delete from inner_role_auth where role_id=#{roleId}
  </delete>
  <insert id="insertNewRelationship">
    insert into inner_role_auth(auth_id,role_id) values
  <foreach collection="authIdList" item="authId"
             separator=",">(#{authId},#{roleId})</foreach>
  </insert>
</mapper>